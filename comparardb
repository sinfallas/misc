#!/usr/bin/env bash
# Made by Sinfallas <sinfallas@yahoo.com>
# Licence: GPL-2
LC_ALL=C
SECONDS=0
IFS=" "
LOCKFILE="/tmp/$(basename $0)_$(whoami)"
LOCKFD="150"
nom=$(basename "$0")
archi="$HOME/resultado.txt"

function clean_1() {
	rm -f /run/$(basename $0).pid
        rm -f "$LOCKFILE"
	rm -f $archi
}

function ayuda() {
	echo "Ejemplo: $nom IP1 PORT1 IP2 PORT2 NOMBREDB USER PASSWORD"
	exit 1
}

function lock() {
        echo {LOCKFD}>$LOCKFILE
        flock -n $LOCKFD
}

function exit_error() {
        echo "ERROR: Ya hay una instancia en ejecuciÃ³n. Saliendo"
        exit 1
}

echo "$BASHPID" > /run/$(basename $0).pid
trap "clean_1; exit" 0 1 2 3 15
lock || exit_error

if [[ $(dpkg --get-selections | grep -w "postgresql-client" | awk '{print $1}' | head -1) = postgresql-client ]]; then
	echo "" > /dev/null
else
	echo "ERROR: el paquete postgresql-client no esta instalado."
	exit 1
fi

if [[ -z "$1" ]]; then
	ayuda
fi

if [[ -z "$2" ]]; then
	ayuda
fi

if [[ -z "$3" ]]; then
	ayuda
fi

if [[ -z "$4" ]]; then
	ayuda
fi

if [[ -z "$5" ]]; then
	ayuda
fi

if [[ -z "$6" ]]; then
	ayuda
fi

if [[ -z "$7" ]]; then
	ayuda
fi

clear

contarori=$(PGPASSWORD=$7 psql -h $1 -p $2 -U $6 -d $5 -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public' AND table_type = 'BASE TABLE'" | grep -v '(1 row)' | sed 1d | sed 1d | sed 2d)
contardes=$(PGPASSWORD=$7 psql -h $3 -p $4 -U $6 -d $5 -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public' AND table_type = 'BASE TABLE'" | grep -v '(1 row)' | sed 1d | sed 1d | sed 2d)
listaori=$(PGPASSWORD=$7 psql -h $1 -p $2 -U $6 -d $5 -c "SELECT table_name FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';" | sed 1d | sed 1d)

if [[ "$contarori" == "$contardes" ]]; then
	echo -e "\e[00;1;92mLa cantidad de TABLAS en las db COINCIDE\e[00m"
    	echo "La cantidad de TABLAS en las db COINCIDE." >> $archi
    	echo Cantidad de tablas en origen: $contarori
    	echo Cantidad de tablas en origen: $contarori >> $archi
else
    	echo -e "\e[00;31mERROR: La cantidad de TABLAS en las db son diferentes.\e[00m"
    	echo "ERROR: La cantidad de TABLAS en las db son diferentes." >> $archi
    	echo Cantidad de tablas en origen: $contarori
    	echo Cantidad de tablas en origen: $contarori >> $archi
    	echo Cantidad de tablas en destino: $contardes
    	echo Cantidad de tablas en destino: $contardes >> $archi
fi

echo "================================"
echo "================================" >> $archi

for i in ${listaori[@]}; do
	dbori=$(PGPASSWORD=$7 psql -h $1 -p $2 -U $6 -d $5 -c "select count(*) from $i" | grep -v '(1 row)' | sed 1d | sed 1d | sed 2d)
	dbdes=$(PGPASSWORD=$7 psql -h $3 -p $4 -U $6 -d $5 -c "select count(*) from $i" | grep -v '(1 row)' | sed 1d | sed 1d | sed 2d)
	echo $i
	echo $i >> $archi
	echo $dbori
	echo $dbori >> $archi
	echo $dbdes
	echo $dbdes >> $archi
	if [[ "$contarori" == "$contardes" ]]; then
    		echo -e "\e[00;1;92mLos datos COINCIDEN.\e[00m"
    		echo "Los datos COINCIDEN." >> $archi
	else
    		echo -e "\e[00;31mERROR: Los datos son diferentes.\e[00m"
    		echo "ERROR: Los datos son diferentes." >> $archi
	fi
	echo "================================"
	echo "================================" >> $archi
done

swaks -4 --to destino@mail.com --from origen@mail.com --server server.mail.com:587 -tls --auth LOGIN --auth-user origen@mail.com --auth-password 1234567890 --header "Subject: Reporte de comparacion %DATE%" --body "Se adjunta el archivo." --attach-type "text/plain" --attach-name "resultado.txt" --attach @/home/example/resultado.txt

echo "duracion $SECONDS segundos"
echo "Finalizado."
